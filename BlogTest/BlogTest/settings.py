"""
Django settings for BlogTest project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import json
import os
from pathlib import Path
from django.core.exceptions import ImproperlyConfigured




# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


with open(os.path.join(BASE_DIR, 'config/config.json')) as config_file:
    config = json.load(config_file)

def get_config(setting, config = config ):
    """Obtenemos la configuracion o falla capturando con ImproperlyConfigured"""
    try:
        return config[setting]
    except KeyError:
        raise ImproperlyConfigured("El atributo {} no es correcto".format(setting))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY ='yyjneti=qo-7@wqsbngx69%49*a+07b77i%12i&y+ulhj2eie-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['xene28.pythonanywhere.com']


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blogapp',
    'ckeditor',
    'ckeditor_uploader',
    'events',
    'django_social_share',
]

JAZZMIN_SETTINGS = {
    "site_title": "Administraci√≥n",

    "site_brand": "FundacionPueblo",

    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "blogapp.about":"fas fa-address-card",
        "blogapp.category":"fas fa-bars",
        "blogapp.comment":"fas fa-comment",
        "blogapp.tag":"fas fa-tag",
        "blogapp.post":"fas fa-clipboard",
        "blogapp.link":"fas fa-thumbs-up",
        "events.event":"fas fa-calendar",
        "events.eventcategory":"fas fa-bars",

    },
    "topmenu_links": [

        # Url that gets reversed (Permissions can be added)
        {"name": "Home",  "url": "home", "permissions": ["auth.view_user"]},

        # external url that opens in a new window (Permissions can be added)
        #{"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues", "new_window": True},

        # model admin to link to (Permissions checked against model)
        {"model": "auth.User"},{"model": "auth.Group"},


        # App with dropdown menu to all its models pages (Permissions checked against models)
        {"app": "blogapp"},{"app": "events"}
    ],
    "show_sidebar": False,

}

JAZZMIN_UI_TWEAKS = {
    "theme": "flaty",
    "navbar_fixed": False,
}




CKEDITOR_UPLOAD_PATH = "uploads/"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'BlogTest.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'blogapp.processors.ctx_dic_link',
                'blogapp.processors.ctx_dic_about',
                'blogapp.processors.ctx_dic_category',
                'blogapp.processors.ctx_dic_history',
                'events.processors.ctx_dic_category',
            ],
        },
    },
]

WSGI_APPLICATION = 'BlogTest.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': get_config('DB_NAME'),
            'USER': get_config('DB_USER'),
            'PASSWORD': get_config('DB_PASSWORD'),
            'HOST': get_config('DB_HOST'),
            'PORT': get_config('DB_PORT'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
#STATICFILES_DIRS = [
#    BASE_DIR / "/static/"
#]
STATIC_ROOT = BASE_DIR / 'blogapp/static'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'blogapp/media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#Definimos el login
LOGIN_REDIRECT_URL = 'home'






